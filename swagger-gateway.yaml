swagger: "2.0"
info:
  title: Gateway API
  description: Piazza Core Services API
  version: "0.1.0"
  contact: 
    name: Patrick Doody
    email: patrick.doody@rgi-corp.com
    url: https://github.com/venicegeo/venice/wiki
host: pz-gateway.stage.geointservices.io
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /job/{jobId}:
    get:
      summary: Get Job Status
      description: "Fetches the Status for a single Piazza Job."
      parameters:
        - name: jobId
          in: path
          description: "ID of the Job to Fetch"
          required: true
          type: string
      tags:
        - Job
      responses:
        200:
          description: "Information regarding the requested Job. At bare minimum, this will contain the Job ID of the Job that has been spawned as a result of the POSTed message. If more information is available, such as Status, it will also be included."
          schema:
            $ref: '#/definitions/JobStatus'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      summary: Repeat Job
      description: "Repeats a previously submitted Job. This will clone the original Job, and run it again with identical parameters, using the requesting users authentication in the new Job."
      parameters:
        - name: jobId
          in: path
          description: "ID of the Job to Repeat"
          required: true
          type: string
      tags:
        - Job
      responses:
        200:
          description: "A new Job ID that corresponds to the cloned Job in Piazza."
          schema:
            $ref: '#/definitions/JobResponse'
        default:
          description: "Unexpected Error."
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      summary: Abort Job
      description: "Cancels a Running Job. If the Job is already completed in some way, then cancellation will not occur."
      parameters:
        - name: jobId
          in: path
          description: "ID of the Job to cancel."
          required: true
          type: string
        - name: abort
          in: body
          description: "Details for the cancellation of the Job."
          required: false
          schema:
            $ref: '#/definitions/AbortDetails'
      tags:
        - Job
      responses:
        200:
          description: "The Job has requested to be cancelled. This may take some time, as the process may not be in an easily cancelled state at the time the request is made."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /job:
    post:
      summary: Executes a registered Service
      description: "Creates a Piazza Job to execute a registered service in the system, with the specified parameters."
      parameters:
        - name: data
          in: body
          description: "The Payload that describes the Service to be executed, and the inputs for that service."
          required: true
          schema:
            $ref: '#/definitions/ExecuteJob'
      tags:
        - Job
        - Service
      responses:
        200:
          description: "The Job ID for the execution of the Service. This can be queried using Job Status to track progress and, when available, fetch the result object."
          schema:
            $ref: '#/definitions/JobResponse'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /data:
    post:
      summary: Load Data into Piazza
      description: "Loads data into the Piazza Core metadata holdings. Piazza can either host the data, or reflect an external location where the data is stored. Data must be loaded into Piazza before core components such as the Service Controller, or other external services, are able to consume that data."
      parameters:
        - name: data
          in: body
          description: "The description, location, and metadata for the Data to be loaded into Piazza."
          required: true
          schema:
            $ref: '#/definitions/IngestJob'
      tags:
        - Data
      responses:
        200:
          description: "The ID of the Job created to handle the Loading of the Data."
          schema:
            $ref: '#/definitions/JobResponse'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /data/{dataId}:
    get:
      summary: Get Metadata for Loaded Data
      description: "Reads all metadata for a Data item that has been previously loaded into Piazza."
      parameters:
        - name: dataId
          in: path
          description: "ID of the Data item to pull Metadata for."
          required: true
          type: string
      tags:
        - Data
      responses:
        200:
          description: "Metadata describing the Data Item that matches the specified Data ID. Includes release metadata, and spatial metadata, etc."
          schema:
            $ref: '#/definitions/DataResource'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /data/query:
    post:
      summary: Query Metadata in Piazza Data holdings
      description: "Sends a complex query message to the Piazza Search component, that allow users to search for loaded data. Searching is capable of filtering by keywords, spatial metadata, or other dynamic information."
      parameters:
        - name: search
          in: body
          description: "The Query string for the Search component."
          required: true
          schema:
            $ref: '#/definitions/SearchJob'
      tags:
        - Data
        - Search
      responses:
        200:
          description: "The list of Search results that match the query string."
          schema:
            type: array
            items:
              $ref: '#/definitions/DataResource'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /deployment:
    post:
      summary: Obtain a GeoServer deployment for a Data Resource object.
      description: "Data that has been ingested into Piazza can be deployed to GeoServer. This will copy the data to the GeoServer data directory (if needed), or point to the Piazza PostGIS; and then create a WMS/WCS/WFS layer (as available) for the service. Only data that has been internally hosted within Piazza can be deployed."
      parameters:
        - name: data
          in: body
          description: "The Data ID and deployment information for creating the Deployment"
          required: true
          schema:
            $ref: '#/definitions/DeploymentJob'
      tags:
        - Data
        - Deployment
      responses:
        200:
          description: "The Deployment metadata for the newly created Deployment."
          schema:
            $ref: '#/definitions/Deployment'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /deployment/{deploymentId}:
    get:
      summary: Get Deployment Metadata
      description: "Fetches the Metadata for a Piazza Deployment."
      parameters:
        - name: deploymentId
          in: path
          description: "ID of the Deployment to Fetch"
          required: true
          type: string
      tags:
        - Deployment
      responses:
        200:
          description: "The metadata about the Deployment. Contains the unique ID of the deployment; the Data ID that it represents; and server information regarding the access of the deployed service (likely GeoServer) including the GetCapabilities document."
          schema:
            $ref: '#/definitions/Deployment'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /file/{dataId}:
    get:
      summary: Download Data File
      description: "Gets the Bytes of Data ingested into Piazza. Only works for data that is stored internally by Piazza."
      parameters:
        - name: dataId
          in: path
          description: "The ID of the Data to download."
          required: true
          type: string
      tags:
        - Data
      responses:
        200:
          description: "Downloads the bytes of the file for the specified Data ID."
          schema:
            type: file
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /service:
    post:
      summary: Register new Service definition
      description: "Creates a new Service with the Piazza Service Controller; that can be invoked through Piazza jobs with Piazza data."
      parameters:
        - name: service
          in: body
          description: "The metadata for the service. This includes the URL, parameters, inputs and outputs. It also includes other release metadata such as classification and availability."
          required: true
          schema:
            $ref: '#/definitions/Service'
      tags:
        - Service
      responses:
        200:
          description: "The ID of the newly created Service"
          schema:
            type: string
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      summary: Retrieve list of Services
      description: "Retrieves the list of available Services currently registered to this Piazza system."
      tags:
        - Service
      responses:
        200:
          description: "The list of Services registered to Piazza."
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /service/{serviceId}:
    get:
      summary: Retrieve Service information
      description: "Retrieves the information and metadata for the specified Service matching the ID."
      parameters:
        - name: serviceId
          in: path
          description: "The ID of the Service to retrieve."
          required: true
          type: string
      tags:
        - Service
      responses:
        200:
          description: "The Service object."
          schema:
            $ref: '#/definitions/Service'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      summary: Unregister a Service
      description: "Unregisters a service by its ID."
      parameters:
        - name: serviceId
          in: path
          description: "The ID of the Service to unregister."
          required: true
          type: string
      tags:
        - Service
      responses:
        200:
          description: "Confirmation of Deleted."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      summary: Update Service information.
      description: "Updates a Service Metadata, with the Service to updated specified by its ID."
      parameters:
        - name: serviceId
          in: path
          description: "The ID of the Service to Update."
          required: true
          type: string
        - name: service
          in: body
          description: "The Service Metadata. All properties specified in the Service data here will overwrite the existing properties of the Service."
          required: true
          schema:
            $ref: '#/definitions/Service'
      tags:
        - Service
      responses:
        200:
          description: "Confirmation of Update."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /event:
    get:
      summary: Get all Events
      description: "Retrieves a list of all Events."
      tags:
        - Workflow
        - Event
      responses:
        200:
          description: "The list of Events."
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /event/{eventTypeId}:
    get:
      summary: Get Events of a Specific Type
      description: "Retrieves all Events of the Specific Type."
      parameters:
        - name: eventTypeId
          in: path
          description: "The name of the Event Type."
          required: true
          type: string
      tags:
        - Workflow
        - Event
      responses:
        200:
          description: "The list of Events."
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      summary: Creates an Event for the Event Type
      description: "Fires an Event with the Piazza Workflow component. Events must conform to the specified Event Type."
      parameters:
        - name: eventTypeId
          in: path
          description: "The Event Type that the Event conforms to."
          required: true
          type: string
        - name: event
          in: body
          description: "The Event JSON object."
          required: true
          schema:
            $ref: '#/definitions/Event'
      tags:
        - Workflow
        - Event
      responses:
        200:
          description: "The ID of the newly created Event"
          schema:
            type: string
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /event/{eventTypeId}/{eventId}:
    get:
      summary: Get a specifc Event
      description: "Gets a specific Event by it's ID, that corresponds with the Event Type."
      parameters:
        - name: eventTypeId
          in: path
          description: "The Event Type that the Event implements."
          required: true
          type: string
        - name: eventId
          in: path
          description: "The Event ID for the event to retrieve."
          required: true
          type: string
      tags:
        - Workflow
        - Event
      responses:
        200:
          description: "The requested Event."
          schema:
            $ref: '#/definitions/Event'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      summary: Delete a specific Event
      description: "Deletes a specific Event by it's ID, that corresponds with the Event Type."
      parameters:
        - name: eventTypeId
          in: path
          description: "The Event Type that the Event implements."
          required: true
          type: string
        - name: eventId
          in: path
          description: "The Event ID for the event to retrieve."
          required: true
          type: string
      tags:
        - Workflow
        - Event
      responses:
        200:
          description: "Confirmation of delete."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /eventType:
    post:
      summary: Register an Event Type
      description: "Defines an Event Type with the Workflow component, that defines a schema that Events can conform to and be fired for."
      parameters:
        - name: eventType
          in: body
          description: "The Event Type information. This defines the Schema for the Events that must be followed."
          required: true
          schema:
            $ref: '#/definitions/EventType'
      tags:
        - Workflow
        - Event Type
      responses:
        200:
          description: "The ID of the newly created Event Type"
          schema:
            type: string
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      summary: List Event Types
      description: "Lists all Event Types that have been registered with the Piazza Workflow service."
      tags:
        - Workflow
        - Event Type
      responses:
        200:
          description: "The list of Event Types."
          schema:
            type: array
            items:
              $ref: '#/definitions/EventType'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /eventType/{eventTypeId}:
    get:
      summary: Get an Event Type
      description: "Returns the metadata for a specific Event Type by its unique identifier."
      parameters:
        - name: eventTypeId
          in: path
          description: "The unique identifier for the Event Type."
          required: true
          type: string
      tags:
        - Workflow
        - Event Type
      responses:
        200:
          description: "The Event Type metadata."
          schema:
            $ref: '#/definitions/EventType'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      summary: Delete an Event Type
      description: "Deletes a specific Event Type, specified by its unique identifier."
      parameters:
        - name: eventTypeId
          in: path
          description: "The unique identifier for the Event Type to delete."
          required: true
          type: string
      tags:
        - Workflow
        - Event Type
      responses:
        200:
          description: "Confirmation of Event Type deletion."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /trigger:
    post:
      summary: Creates a Trigger
      description: "Creates a new Trigger with the Piazza Workflow component."
      parameters:
        - name: trigger
          in: body
          description: "The Trigger information to register. This defines the Conditions that must be hit in order for some Action to occur."
          required: true
          schema:
            $ref: '#/definitions/Trigger'
      tags:
        - Workflow
        - Trigger
      responses:
        200:
          description: "The ID of the newly created Trigger"
          schema:
            type: string
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      summary: List Triggers
      description: "Lists all of the defined Triggers in the Piazza Workflow component."
      tags:
        - Workflow
        - Trigger
      responses:
        200:
          description: "The list of Triggers."
          schema:
            type: array
            items:
              $ref: '#/definitions/Trigger'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /trigger/{triggerId}:
    get:
      summary: Gets Metadata for a Trigger
      description: "Retrieves the Trigger definition for the Trigger matching the specified Trigger ID."
      parameters:
        - name: triggerId
          in: path
          description: "The ID of the Trigger to retrieve."
          required: true
          type: string
      tags:
        - Workflow
        - Trigger
      responses:
        200:
          description: "The Trigger metadata."
          schema:
            $ref: '#/definitions/Trigger'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      summary: Deletes a Trigger
      description: "Deletes a Trigger with the Workflow component. This Trigger will no longer listen for conditions for events to fire."
      parameters:
        - name: triggerId
          in: path
          description: "The ID of the Trigger to delete."
          required: true
          type: string
      tags:
        - Workflow
        - Trigger
      responses:
        200:
          description: "Confirmation of Trigger deletion.."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /alert:
    get:
      summary: Get User Alerts
      description: "Gets all of the Alerts for the currently authenticated user. Alerts occur when a Trigger's conditions are met."
      tags:
        - Workflow
        - Alert
      responses:
        200:
          description: "The list of Alerts owned by the current User."
          schema:
            type: array
            items:
              $ref: '#/definitions/Alert'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
  /alert/{alertId}:
    get:
      summary: Get Alert Information
      description: "Gets the metadata for a single Alert; referenced by ID."
      parameters:
        - name: alertId
          in: path
          description: "The ID of the Alert to retrieve metadata for."
          required: true
          type: string
      tags:
        - Workflow
        - Alert
      responses:
        200:
          description: "The Alert metadata."
          schema:
            $ref: '#/definitions/Alert'
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      summary: Delete Alert
      description: "Deletes an Alert; referenced by ID."
      parameters:
        - name: alertId
          in: path
          description: "The ID of the Alert to Delete."
          required: true
          type: string
      tags:
        - Workflow
        - Alert
      responses:
        200:
          description: "Confirmation of Delete."
        default:
          description: "Unexpected Error"
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  ErrorResponse:
    description: "The standard response object for an unexpected error within the Piazza core."
    type: object
    required:
      - message
      - origin
    properties:
      message:
        description: "The high-level description of the error message. May contain debug information useful for technical debugging."
        type: string
      origin:
        description: "The name of the component the error originated from."
        type: string
  JobResponse:
    type: object
    description: "An asynchronous response from the Gateway where a Job has been created, with the provided Job ID. This Job ID can then be queried for Job status to determine when the Job has succeeded, or to track its progress."
    required:
      - jobId
    properties:
      jobId:
        description: "The ID of the Job that has been created from the request."
        type: string
  JobStatus:
    type: object
    description: "Represents the status of a Job in the Piazza system; either running or completed. Contains information such as progress, time remaining, errors encountered, Job results, or general Job Status."
    required:
      - status
      - jobType
      - submittedBy
    properties:
      result:
        description: "A reference to the Result of the Job. This could be a Resource ID, or a Service ID, in certain cases. Or perhaps an error if the Job encountered an error during processing."
        type: string
      status:
        description: "The status of the Job. Submitted, Running, Success, Error, or Failure."
        type: string
      jobType:
        description: "Polymorphically describes the information defining what actions this Job should take."
        type: string
      submittedBy:
        description: "The name of the user who submitted the Job."
        type: string
      progress:
        $ref: '#/definitions/JobProgress'
  JobProgress:
    type: object
    description: "Defines Job Progress."
    properties:
      percentComplete:
        description: "The percentage complete for the Job, in whole numbers, out of 100 percent"
        type: integer
        format: int32
      timeRemaining:
        description: "The last value for the Time Remaining as reported by the processor of this Job."
        type: string
      timeSpent:
        description: "The amount of time spent by the processor of this Job, according to that processor."
        type: string
  DataResource:
    type: object
    description: "Defines a Data Resource in the Piazza core data holdings. Includes information as to the data's format, location, spatial content, and metadata."
    properties:
      data:
        description: "Polymorphically defines the information specific to this Data Resource, based on its format."
        type: object
      metadata:
        $ref: '#/definitions/ResourceMetadata'
      spatialMetadata:
        $ref: '#/definitions/SpatialMetadata' 
  IngestJob:
    type: object
    description: "Defines the payload for requesting Data to be loaded into Piazza."
    allOf:
      - $ref: '#/definitions/DataResource'
      - required:
        - host
        properties:
          host:
            description: "Dictates if Piazza should internally host the data or not. If set to true, then the data will be stored in Piazza's data holdings. If false, then Piazza will point to the location of the data, but will not store the data internally."
            type: boolean
  AbortDetails:
    type: object
    description: "Defines the payload for requesting a running Piazza Job to be cancelled."
    properties:
      reason:
        type: string
        description: "The reason for the job to be cancelled. This is tracked within the Job table for quality control purposes."
  SearchJob:
    type: object
    description: "Defines the payload for submitting a Search Request to Piazza data."
    properties:
      data:
        description: "The ElasticSearch DSL Query string that will be forwarded to Piazza data holdings."
        type: string
  DeploymentJob:
    type: object
    description: "Defines the payload for submitting the request to create a Deployment for a Data Resource."
    properties:
      dataId:
        type: string
        description: "The Data ID of the Data to stand up as a Deployment service."
      deploymentType:
        type: string
        description: "The type of deployment to create. By default, this value will be 'geoserver' and will create a GeoServer WFS/WMS/WCS service."
  Deployment:
    type: object
    description: "Represents metadata for a Deployment (GeoServer, etc) of Piazza data."
    properties:
      id:
        type: string
        description: "The unique identifier for this Deployment."
      dataId:
        type: string
        description: "The unique identifier of the Data that this deployment hosts."
      host:
        type: string
        description: "The host name for the deployment server."
      port:
        type: string
        description: "The port number for the deployment server."
      layer:
        type: string
        description: "The layer name for the hosted service on the deployment server."
      capabilitiesUrl:
        type: string
        description: "Fully qualified URL for accessing the GetCapabilities action for the deployment service."
  Service:
    type: object
    description: "Represents an external service that is registered through Piazza. External services registered can be invoked directly by Piazza, and will have their inputs and outputs validated as part of the Piazza brokering. Service objects are described by their endpoint URL, their inputs and outputs, and other metadata including availability and classification."
    properties:
      id:
        description: "The unique identifier of the Service."
        type: string
      name:
        description: "Human-readable identifier for the service."
        type: string
      resourceMetadata:
        $ref: '#/definitions/ResourceMetadata'
      inputs:
        type: object
        description: "The inputs that the service expects to be provided."
      outputs:
        type: object
        description: "The outputs that the service expects to provide upon successful execution."
  ResourceMetadata:
    type: object
    description: "Describes general Metadata containers for certain types of metadata that apply to Piazza Services and Data. Such as classification, author, availability, etc. All properties for Metadata are optional, and none are enforced or required. However, good practice dictates to specify as much metadata as possible when able."
    properties:
      name:
        type: string
        description: "Human-readable name of the object."
      description:
        type: string
        description: "Human-readable description of the object."
      url:
        type: string
        description: "Associated URL location for the object."
  SpatialMetadata:
    type: object
    description: "Describes common spatial metadata that applies to Data ingested through Piazza."
    properties:
      coordinateReferenceSystem:
        type: string
        description: "The CRS (Coordinate Reference System) of the data."
      epsgCode:
        type: integer
        description: "The EPSG code of the CRS."
      minX:
        type: number
        description: "Minimum X bounds."
      minY:
        type: number
        description: "Minimum Y bounds."
      maxX:
        type: number
        description: "Maximum X bounds."
      maxY:
        type: number
        description: "Maximum Y bounds."
  ExecuteJob:
    type: object
    description: "The payload that describes a Service Controller execution Job."
    properties:
      serviceId:
        type: string
        description: "The ID of the Service to Execute."
      dataInputs:
        type: object
        description: "The Inputs for the execution."
      dataOutput: 
        type: object
        description: "The Output for the execution."
  EventType:
    type: object
    description: "Describes an Event Type within Piazza Workflow component. This defines the schema for a specific type of event."
    properties:
      id:
        type: string
        description: "The unique identifier of this Event Type."
      name:
        type: string
        description: "The human-readable name for this Event Type."
      mapping:
        type: object
        description: "The map of key-value pairs that define the properties of this Event Type. The key is the name of the property, and the value is the type of that property. Valid types are 'string' and 'integer'."
  Event:
    type: object
    description: "Describes an Event that can be triggered through Piazza Workflow component. Each Event conforms to an Event Type schema."
    required:
      - id
      - eventtype_id
      - data
    properties:
      id: 
        type: string
        description: "The unique identifier for this Event."
      eventtype_id:
        type: string
        description: "The unique identifier of the Event Type whose schema this Event conforms to."
      date: 
        type: string
        format: date-time
        description: "The date and time that the Event has generated."
      data:
        type: object
        description: "The populated values for the Key-value pairs defined by the Event Type's 'mapping' dictionary. Each value in this dictionary must be populated here under this 'data' property."
  Trigger:
    type: object
    description: "Defines an action that is to be taken when a specific Event occurs."
    properties:
      id:
        type: string
        description: "The unique identifier for this Event."
      title:
        type: string
        description: "The human-readable description of what this Trigger intends to accomplish."
      condition:
        type: object
        description: "Defines the trigger conditions, the query replacements, and the Job to execute upon this object becoming Triggered."
  Alert:
    type: object
    description: "Defines the event for when a Trigger has been fired based on a condition defined within that Trigger."
    properties:
      id: 
        type: string
        description: "The unique identifier for this Alert."
      trigger_id:
        type: string
        description: "The unique identifier for the Trigger that was hit."
      event_id:
        type: string
        description: "The unique identifier for the Event that triggered the Trigger."















